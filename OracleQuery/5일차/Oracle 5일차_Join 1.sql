-- 5일차 JOIN

-- @JOIN 종합실습
--1. 주민번호가 1970년대 생이면서 성별이 여자이고, 
-- 성이 전씨인 직원들의 사원명, 주민번호, 부서명, 직급명을 조회하시오.
SELECT EMPLOYEE.EMP_NAME "사원명", EMPLOYEE.EMP_NO "주민번호",DEPARTMENT.DEPT_TITLE "부서명", JOB.JOB_NAME "직급명" FROM EMPLOYEE
JOIN DEPARTMENT
ON EMPLOYEE.DEPT_CODE = DEPARTMENT.DEPT_ID
JOIN JOB
ON EMPLOYEE.JOB_CODE = JOB.JOB_CODE
AND EMPLOYEE.EMP_NO LIKE '7_____-2%' AND SUBSTR(EMPLOYEE.EMP_NAME,1,1) = '전';
--2. 이름에 '형'자가 들어가는 직원들의 사번, 사원명, 부서명을 조회하시오.
SELECT E.EMP_ID "사번", E.EMP_NAME "사원명", D.DEPT_TITLE "부서명"
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID
AND E.EMP_NAME LIKE '%형%';
--3. 해외영업부에 근무하는 사원명, 직급명, 부서코드, 부서명을 조회하시오.
SELECT E.EMP_NAME "사원명", J.JOB_NAME "직급명", D.DEPT_ID "부서코드", D.DEPT_TITLE "부서명"
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID
AND D.DEPT_TITLE LIKE '해외영업%'
JOIN JOB J
ON E.JOB_CODE = J.JOB_CODE;
--4. 보너스포인트를 받는 직원들의 사원명, 보너스포인트, 부서명, 근무지역명을 조회하시오.
SELECT E.EMP_NAME "사원명", E.BONUS "보너스포인트", D.DEPT_TITLE "부서명", L.LOCAL_NAME "근무지역명"
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID AND E.BONUS IS NOT NULL
JOIN LOCATION L
ON D.LOCATION_ID = L.LOCAL_CODE;
--5. 부서코드가 D2인 직원들의 사원명, 직급명, 부서명, 근무지역명을 조회하시오.
SELECT E.EMP_NAME "사원명", J.JOB_NAME "직급명",D.DEPT_TITLE "부서명", L.LOCAL_NAME "근무지역명"
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID AND D.DEPT_ID = 'D2'
JOIN LOCATION L
ON D.LOCATION_ID = L.LOCAL_CODE
JOIN JOB J
ON E.JOB_CODE = J.JOB_CODE;
--6. 급여등급테이블의 최대급여(MAX_SAL)보다 많이 받는 직원들의 사원명, 직급명, 급여, 연봉을 조회하시오.
-- (사원테이블과 급여등급테이블을 SAL_LEVEL컬럼기준으로 조인할 것)
-- 데이터 없음!
SELECT E.EMP_NAME "사원명", J.JOB_NAME "직급명", E.SALARY "급여", E.SALARY * 12 "연봉"
FROM EMPLOYEE E
JOIN JOB J
ON E.JOB_CODE = J.JOB_CODE
JOIN SAL_GRADE S
ON E.SAL_LEVEL = S.SAL_LEVEL AND E.SALARY > S.MAX_SAL;
--7. 한국(KO)과 일본(JP)에 근무하는 직원들의 사원명, 부서명, 지역명, 국가명을 조회하시오.
SELECT E.EMP_NAME "사원명", D.DEPT_TITLE "부서명", L.LOCAL_NAME "지역명", N.NATIONAL_NAME "국가명"
FROM EMPLOYEE E
JOIN DEPARTMENT D
ON E.DEPT_CODE = D.DEPT_ID
JOIN LOCATION L
ON D.LOCATION_ID = L.LOCAL_CODE
JOIN NATIONAL N
ON L.NATIONAL_CODE = N.NATIONAL_CODE AND N.NATIONAL_CODE IN ('KO', 'JP');
--8. 보너스포인트가 없는 직원들 중에서 직급이 차장과 사원인 직원들의 사원명, 직급명, 급여를 조회하시오. 
--단, join과 IN 사용할 것
SELECT E.EMP_NAME "사원명", J.JOB_NAME "직급명", E.SALARY "급여"
FROM EMPLOYEE E
JOIN JOB J
ON E.JOB_CODE = J.JOB_CODE
AND J.JOB_CODE IN ('J4', 'J7');

--9. 재직중인 직원과 퇴사한 직원의 수를 조회하시오. (JOIN아님)
SELECT DECODE(ENT_YN, 'Y', '퇴사', 'N', '재직'), COUNT(*)
FROM EMPLOYEE
GROUP BY ENT_YN;

-- 1. JOIN의 종류
-- 1.1 INNER JOIN : 교집합, 일반적으로 사용하는 조인
-- 1.2 OUTER JOIN : 합집합, 모두 출력하는 조인
-- ex) 사원명과 부서명을 출력하시오
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
INNER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID; -- 21개임, 2개가 빠짐,
-- 2개는 왜 빠졌나? DEPT_CODE가 NULL인 데이터를 빠짐
-- -> 이것을 INNER JOIN이라고 함.

-- LEFT OUTER JOIN은 왼쪽 테이블이 가지고 있는 모든 데이터를 출력
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
LEFT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;

-- RIGHT OUTER JOIN은 오른쪽 테이블이 가지고 있는 모든 데이터를 출력
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
RIGHT OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;

-- FULL OUTER JOIN은 양쪽 테이블이 가지고 있는 모든 데이터를 출력
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE
FULL OUTER JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID;

-- 오라클 전용 구문, JOIN 사용해보기
-- 1. INNER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID;
-- 2. LEFT OUTER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE = DEPT_ID(+);
-- 3.RIGHT OUTER JOIN
SELECT EMP_NAME, DEPT_TITLE
FROM EMPLOYEE, DEPARTMENT WHERE DEPT_CODE(+) = DEPT_ID;
-- 4. FULL OUTER JOIN
-- 존재하지 않음.